name: build-jaus-plugin

on:
  workflow_call:

  push:
    branches: [
      test_build_wireshark_source
    ]

jobs:
  build_ubuntu-20_04:
    runs-on: ubuntu-20.04

    steps:
      - name: Cache built binaries
        id: cache-bin
        uses: actions/cache@v4
        with:
          path: |
            /home/runner/work/jaustoolset/wireshark_artifacts
            /home/runner/work/jaustoolset/jaustoolset/wireshark/build/config.h
          key: ubuntu-20_04-cache

      - name: List wireshark_artifacts
        if: steps.cache-bin.outputs.cache-hit == 'true'
        shell: bash
        run: ls -R $GITHUB_WORKSPACE

      # # - name: List wireshark_artifacts
      # #   shell: bash
      # #   run: ls -R $GITHUB_WORKSPACE/wireshark_artifacts/lib/wireshark

      # - name: Checkout plugin code
      #   uses: actions/checkout@v3

      # - name: Install dependencies
      #   shell: bash
      #   run: |
      #     sudo add-apt-repository universe
      #     sudo apt-get update
      #     sudo apt-get install -y libxml2-dev

      # - name: Create build folder
      #   working-directory: wiresharkPlugin/packet-jaus/src/Wireshark-3.2.x
      #   shell: bash
      #   run: mkdir build

      # - name: Configure plugin
      #   working-directory: wiresharkPlugin/packet-jaus/src/Wireshark-3.2.x/build
      #   shell: bash
      #   run: cmake -DCMAKE_PREFIX_PATH=/home/runner/work/jaustoolset/wireshark_artifacts ..
      
      # # - name: Upload CMakeCache
      # #   uses: actions/upload-artifact@v3
      # #   with:
      # #     name: plugin_build_artifacts
      # #     path: wiresharkPlugin/packet-jaus/src/Wireshark-3.2.x/build

      # - name: Copy config.h
      #   working-directory: wiresharkPlugin/packet-jaus/src/Wireshark-3.2.x/build
      #   shell: bash
      #   run: cp /runner/work/jaustoolset/jaustoolset/wireshark/build/config.h ..

      # - name: Build plugin
      #   working-directory: wiresharkPlugin/packet-jaus/src/Wireshark-3.2.x/build
      #   shell: bash
      #   run: cmake --build .

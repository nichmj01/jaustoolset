name: build-wireshark-debian

on:
  workflow_call:

  push:
    branches: [
      test_build_wireshark_source
    ]

jobs:
  build_ubuntu-20_04:
    runs-on: ubuntu-20.04

    steps:
      # - name: Make wireshark_artifacts directory
      #   shell: bash  
      #   run: mkdir -p $GITHUB_WORKSPACE/wireshark_artifacts

      - name: Restore built binaries from cache
        id: cache-bin
        uses: actions/cache/restore@v4
        with:
          key: ubuntu-20_04-cache
          fail-on-cache-miss: true
          path: |
            ./wireshark_artifacts/**
            ./wireshark/build/config.h

      # - name: Checkout Wireshark source
      #   uses: actions/checkout@v4
      #   with:
      #     repository: wireshark/wireshark
      #     ref: v3.2.18
      #     path: wireshark
 
      # - name: Install Wireshark dependencies
      #   working-directory: wireshark
      #   run: sudo tools/debian-setup.sh python3-pip ninja-build -y

      # - name: Make build directory
      #   working-directory: wireshark
      #   run: mkdir build

      # - name: Configure cmake
      #   working-directory: wireshark/build
      #   run: cmake -GNinja ..

      # - name: List targets
      #   working-directory: wireshark/build
      #   run: |
      #     ninja -t targets all
      
      - name: Build debian package
        working-directory: wireshark_artifacts
        run: |
          ln -snf packaging/debian
          export DEB_BUILD_OPTIONS="nocheck"
          dpkg-buildpackage -b -us -uc -jauto          

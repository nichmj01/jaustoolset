name: build-wireshark-source

on:
  workflow_call:

  push:
    branches: [
      test_build_wireshark_source
    ]

jobs:
  build_ubuntu-20_04:
    runs-on: ubuntu-20.04

    steps:
      - name: List $GITHUB_WORKSPACE
        shell: bash
        run: ls -R $GITHUB_WORKSPACE

      - name: Make wireshark_artifacts directory
        shell: bash  
        run: mkdir -p $GITHUB_WORKSPACE/wireshark_artifacts

      - name: List $GITHUB_WORKSPACE
        shell: bash
        run: ls -R $GITHUB_WORKSPACE

      # - name: Cache built binaries
      #   id: cache-bin
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ./wireshark_artifacts/**
      #       ./jaustoolset/wireshark/build/config.h
      #     key: ubuntu-20_04-cache

      - name: Checkout Wireshark source
        uses: actions/checkout@v4
        with:
          repository: wireshark/wireshark
          ref: v3.2.18
          path: wireshark

      - name: List $GITHUB_WORKSPACE
        shell: bash
        run: ls -R $GITHUB_WORKSPACE
  
      - name: Install Wireshark dependencies
        working-directory: wireshark
        run: sudo tools/debian-setup.sh python3-pip ninja-build -y

      - name: Make build directory
        working-directory: wireshark
        run: mkdir build

      - name: Build and install wireshark
        working-directory: wireshark/build
        run: |
          cmake -GNinja -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/wireshark_artifacts ..
          cmake --build .
          cmake --install . 

      - name: List wireshark_artifacts
        shell: bash
        run: ls -R $GITHUB_WORKSPACE

      - name: Save built binaries to cache
        id: cache-bin
        uses: actions/cache/save@v4
        with:
          path: |
            ./wireshark_artifacts/**
            ./wireshark/build/config.h
          key: ubuntu-20_04-cache


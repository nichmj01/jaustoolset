name: workflow_dev

on:
  workflow_call:

  push:
    branches: [
      workflow_dev
    ]

jobs:
  build_ubuntu-20_04:
    runs-on: ubuntu-20.04

    steps:
      - name: Make wireshark_artifacts directory
        if: steps.cache-bin.outputs.cache-hit != 'true'
        run: mkdir wireshark_artifacts

      - name: Cache built binaries
        id: cache-bin
        uses: actions/cache@v3
        with:
          path: wireshark_artifacts
          key: ubuntu-20_04-cache

      - name: Checkout Wireshark source
        if: steps.cache-bin.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          repository: wireshark/wireshark
          ref: v3.2.18
          path: wireshark

      - name: Install Wireshark dependencies
        if: steps.cache-bin.outputs.cache-hit != 'true'
        working-directory: wireshark
        run: sudo tools/debian-setup.sh python3-pip ninja-build -y

      - name: Make build directory
        if: steps.cache-bin.outputs.cache-hit != 'true'
        working-directory: wireshark
        run: mkdir build

      - name: Build and install wireshark
        if: steps.cache-bin.outputs.cache-hit != 'true'  
        working-directory: wireshark/build
        run: |
          cmake -GNinja --install-prefix $GITHUB_WORKSPACE/wireshark_artifacts ..
          cmake --build .
          cmake --install . 

      - name: Upload wireshark_artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wireshark_artifacts
          path: wireshark_artifacts

      # - name: Checkout plugin code
      #   uses: actions/checkout@v3

      # - name: Install dependencies
      #   shell: bash
      #   run: |
      #     sudo add-apt-repository universe
      #     sudo apt-get update
      #     sudo apt-get install -y libxml2-dev

      # - name: Create build folder
      #   working-directory: wiresharkPlugin/packet-jaus/src/Wireshark-3.2.x
      #   shell: bash
      #   run: mkdir build

      # - name: Build plugin
      #   working-directory: wiresharkPlugin/packet-jaus/src/Wireshark-3.2.x/build
      #   shell: bash
      #   run: |
      #     cmake -DCMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/wireshark_artifacts ..
      #     cmake --build .


  # build_ubuntu-20_04:
  #   runs-on: ubuntu-20.04

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Install dependencies
  #       shell: bash
  #       run: |
  #         sudo add-apt-repository universe
  #         sudo apt-get update
  #         sudo apt-get install -y wireshark wireshark-dev libxml2-dev

  #     - name: Create build folder
  #       working-directory: wiresharkPlugin/packet-jaus/src/Wireshark-3.2.x
  #       shell: bash
  #       run: mkdir build

  #     - name: Build plugin
  #       working-directory: wiresharkPlugin/packet-jaus/src/Wireshark-3.2.x/build
  #       shell: bash
  #       run: |
  #         cmake ..
  #         make

  # build_ubuntu-18_04:
  #   runs-on: ubuntu-18.04

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Install dependencies
  #       shell: bash
  #       run: |
  #         sudo add-apt-repository universe
  #         sudo apt-get update
  #         sudo apt-get install -y wireshark wireshark-dev libxml2-dev

  #     - name: Create build folder
  #       working-directory: wiresharkPlugin/packet-jaus/src/Wireshark-2.6.x
  #       shell: bash
  #       run: mkdir build

  #     - name: Build plugin
  #       working-directory: wiresharkPlugin/packet-jaus/src/Wireshark-2.6.x/build
  #       shell: bash
  #       run: |
  #         cmake ..
  #         make

